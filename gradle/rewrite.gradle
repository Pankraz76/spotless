apply plugin: 'org.openrewrite.rewrite'

rewrite {
	activeRecipe(
			'org.openrewrite.gradle.GradleBestPractices',
			'org.openrewrite.java.RemoveUnusedImports',
			'org.openrewrite.java.migrate.UpgradeToJava17',
			'org.openrewrite.java.recipes.JavaRecipeBestPractices',
			'org.openrewrite.java.recipes.RecipeTestingBestPractices',
			'org.openrewrite.java.security.JavaSecurityBestPractices',
			'org.openrewrite.staticanalysis.JavaApiBestPractices',
			'org.openrewrite.staticanalysis.LowercasePackage',
			'org.openrewrite.staticanalysis.MissingOverrideAnnotation',
			'org.openrewrite.staticanalysis.ModifierOrder',
			'org.openrewrite.staticanalysis.NoFinalizer',
			'org.openrewrite.staticanalysis.RemoveUnusedLocalVariables',
			'org.openrewrite.staticanalysis.RemoveUnusedPrivateFields',
			'org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods',
			'org.openrewrite.gradle.GradleBestPractices',
			'org.openrewrite.java.RemoveUnusedImports',
			'org.openrewrite.java.migrate.UpgradeToJava17',
			'org.openrewrite.staticanalysis.LowercasePackage',
			'org.openrewrite.staticanalysis.MissingOverrideAnnotation',
			'org.openrewrite.staticanalysis.ModifierOrder',
			'org.openrewrite.staticanalysis.NoFinalizer',
			'org.openrewrite.staticanalysis.RemoveUnusedLocalVariables',
			'org.openrewrite.staticanalysis.RemoveUnusedPrivateFields',
			'org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods',
			'tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes',
			'tech.picnic.errorprone.refasterrules.CharSequenceRulesRecipes',
			'tech.picnic.errorprone.refasterrules.ClassRulesRecipes',
			'tech.picnic.errorprone.refasterrules.CollectionRulesRecipes',
			'tech.picnic.errorprone.refasterrules.ComparatorRulesRecipes',
			'tech.picnic.errorprone.refasterrules.FileRulesRecipes',
			'tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes',
			'tech.picnic.errorprone.refasterrules.PatternRulesRecipes',
			'tech.picnic.errorprone.refasterrules.PreconditionsRulesRecipes',
			'tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes',
			'tech.picnic.errorprone.refasterrules.StreamRulesRecipes',
			'tech.picnic.errorprone.refasterrules.TimeRulesRecipes'
			)
	exclusions.addAll( // bugs
			'**_gradle_node_plugin_example_**',
			'**gradle/changelog.gradle',
			'**gradle/java-publish.gradle',
			'**idea/full.clean.java',
			'**java-setup.gradle',
			'**lib-extra/build.gradle',
			'**lib/build.gradle',
			'**package-info.java',
			'**plugin-maven/build.gradle',
			'**settings.gradle'
			)
	exportDatatables = true
	failOnDryRunResults = true
}
